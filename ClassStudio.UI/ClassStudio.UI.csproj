<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <Version>0.3.0</Version>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>João Neves (shivayl)</Authors>
    <Company>João Neves (shivayl)</Company>
    <Copyright>João Neves (shivayl)</Copyright>
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
    <RepositoryUrl>https://github.com/joao-neves95/ClassStudio</RepositoryUrl>
    <PackageProjectUrl>https://github.com/joao-neves95/ClassStudio</PackageProjectUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>

    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>Scripts\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>
  
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  
  <ItemGroup>
    <None Remove="Scripts\src\app\enums\LangType.ts" />
    <None Remove="Scripts\src\app\models\select.viewModel.ts" />
    <None Remove="Scripts\src\app\shared\Utils.ts" />
    <None Include="..\LICENSE.md">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Scripts\src\app\pages\" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="electron.manifest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\ClassStudio.Core\ClassStudio.Core.csproj" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="ElectronNET.API" Version="5.22.14" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.0.0" />
  </ItemGroup>
  
  <ItemGroup>
    <TypeScriptCompile Include="Scripts\src\app\enums\LangType.ts" />
    <TypeScriptCompile Include="Scripts\src\app\models\select.viewModel.ts" />
    <TypeScriptCompile Include="Scripts\src\app\shared\utils.ts" />
  </ItemGroup>
  
</Project>
