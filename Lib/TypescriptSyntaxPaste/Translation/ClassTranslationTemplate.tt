<#@ template hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
<# string className = "AttributeList"; #>

namespace RoslynTypeScript.Translation
{
    public class <#=className#>Translation : SyntaxTranslation
    {
		  public new <#=className#>Syntax Syntax
        {
            get { return (<#=className#>Syntax)base.Syntax; }
            set { base.Syntax = value; }
        }

		 public <#=className#>Translation(){}
        public <#=className#>Translation(<#=className#>Syntax syntax, SyntaxTranslation parent): base(syntax, parent)
        {
			
        }

         protected override string InnerTranslate()
        {
            return Syntax.ToString();
        }
    }
}
